---
- name: Include variables
  include_vars: "../../../inventories/{{ env }}/{{ env }}_nsg.yaml"
  tags:
    - always

- name: Generate VM rules
  set_fact:
    rules:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      protocol: "{{ item.protocol }}"
      source_address_prefix: "{{ item.source_address_prefix | default(omit) }}"
      destination_address_prefix: "{{ item.destination_address_prefix | default(omit) }}"
      destination_port_range: "{{ item.destination_port_range }}"
      access: "{{ item.access }}"
      priority: "{{ item.priority }}"
      direction: "{{ item.direction }}"
  run_once: "{{ run_nsg_once | default(false) }}"
  with_items:
    - "{{ vm_nsg_rules }}"
  register: vm_generated_rules
  tags:
    - createvm
    - updatevmnsgrules
    - createrg
    - doormanrg

- name: Map generated VM rules
  set_fact:
    vm_rules="{{ vm_generated_rules.results | map(attribute='ansible_facts.rules') | list }}"
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - createvm
    - updatevmnsgrules
    - createrg
    - doormanrg

- name: Generate APPGW rules
  set_fact:
    rules:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      protocol: "{{ item.protocol }}"
      source_address_prefix: "{{ item.source_address_prefix | default(omit) }}"
      destination_address_prefix: "{{ item.destination_address_prefix | default(omit) }}"
      destination_port_range: "{{ item.destination_port_range }}"
      access: "{{ item.access }}"
      priority: "{{ item.priority }}"
      direction: "{{ item.direction }}"
  with_items:
    - "{{ appgw_nsg_rules }}"
  register: appgw_generated_rules
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - awxaccess
    - createappgw
    - updateappgwnsgrules
    - createrg
    - manageonensg


- name: Map generated APPGW rules
  set_fact:
    appgw_rules="{{ appgw_generated_rules.results | map(attribute='ansible_facts.rules') | list }}"
  when: tertiary is not defined or tertiary == "no"
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - awxaccess
    - createappgw
    - updateappgwnsgrules
    - createrg
    - manageonensg

- name: Debug appgw_rules
  debug:
    var: appgw_rules
  when: appgw_rules is defined

- name: Generate AKS rules
  set_fact:
    rules:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      protocol: "{{ item.protocol }}"
      source_address_prefix: "{{ item.source_address_prefix | default(omit) }}"
      destination_address_prefix: "{{ item.destination_address_prefix | default(omit) }}"
      destination_port_range: "{{ item.destination_port_range }}"
      access: "{{ item.access }}"
      priority: "{{ item.priority }}"
      direction: "{{ item.direction }}"
  with_items:
    - "{{ aks_nsg_rules }}"
  register: aks_generated_rules
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - createaks
    - updateaksnsgrules
    - createrg

- name: Map generated AKS rules
  set_fact:
    aks_rules="{{ aks_generated_rules.results | map(attribute='ansible_facts.rules') | list }}"
  when: tertiary is not defined or tertiary == "no"
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - createaks
    - updateaksnsgrules
    - createrg

- name: Generate APIM rules
  set_fact:
    rules:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      protocol: "{{ item.protocol }}"
      source_address_prefix: "{{ item.source_address_prefix | default(omit) }}"
      destination_address_prefix: "{{ item.destination_address_prefix | default(omit) }}"
      destination_port_range: "{{ item.destination_port_range }}"
      access: "{{ item.access }}"
      priority: "{{ item.priority }}"
      direction: "{{ item.direction }}"
  with_items:
    - "{{ apim_nsg_rules }}"
  register: apim_generated_rules
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - createapim
    - updateapimnsgrules
    - createrg

- name: Map generated apim rules
  set_fact:
    apim_rules="{{ apim_generated_rules.results | map(attribute='ansible_facts.rules') | list }}"
  when: tertiary is not defined or tertiary == "no"
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - createapim
    - updateapimnsgrules
    - createrg

- name: Generate SSH nsg rule
  set_fact:
    rules:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      protocol: "{{ item.protocol }}"
      source_address_prefix: "{{ item.source_address_prefix | default(omit) }}"
      destination_address_prefix: "{{ item.destination_address_prefix | default(omit) }}"
      destination_port_range: "{{ item.destination_port_range }}"
      access: "{{ item.access }}"
      priority: "{{ item.priority }}"
      direction: "{{ item.direction }}"
  with_items:
    - "{{ single_ssh_rule }}"
  register: single_generated_rule
  tags:
    - manageonensg

- name: Map SSH generated rule
  set_fact:
    single_rule="{{ single_generated_rule.results | map(attribute='ansible_facts.rules') | list }}"
  tags:
    - manageonensg

- name: Generate HTTP nsg rule
  set_fact:
    rules:
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      protocol: "{{ item.protocol }}"
      source_address_prefix: "{{ item.source_address_prefix | default(omit) }}"
      destination_address_prefix: "{{ item.destination_address_prefix | default(omit) }}"
      destination_port_range: "{{ item.destination_port_range }}"
      access: "{{ item.access }}"
      priority: "{{ item.priority }}"
      direction: "{{ item.direction }}"
  with_items:
    - "{{ single_http_rule }}"
  register: single_http_generated_rule
  tags:
    - manageonensg

- name: Map HTTP generated rule
  set_fact:
    single_http_rule="{{ single_http_generated_rule.results | map(attribute='ansible_facts.rules') | list }}"
  tags:
    - manageonensg

- name: Set NSG RG facts
  set_fact:
    vmNSGResourceGroupFact: "{% if vm.nsg.rg is defined %}{{ vm.nsg.rg }}{% else %}{{ resourceGroupName }}{% endif %}"
    appgwNSGResourceGroupFact: "{% if appgw.nsg.rg is defined %}{{ appgw.nsg.rg }}{% else %}{{ resourceGroupName }}{% endif %}"
    aksNSGResourceGroupFact: "{% if aks.nsg.rg is defined %}{{ aks.nsg.rg }}{% else %}{{ resourceGroupName }}{% endif %}"
    apimNSGResourceGroupFact: "{% if apim.nsg.rg is defined %}{{ apim.nsg.rg }}{% else %}{{ resourceGroupName }}{% endif %}"
    sqlNSgResourceGroupFact: "{% if nsg.rg is defined %}{{ nsg.rg }}{% elif sqlResourceGroupName is defined %}{{ sqlResourceGroupName }}{% else %}{{ resourceGroupName }}{% endif %}"
  tags:
  - createvm
  - updatevmnsgrules
  - createrg
  - doormanrg

- name: Add VM NSG rules
  azure_rm_securitygroup:
    name: "{{ vm.nsg.name }}"
    resource_group: "{{ vm.nsg.rg | default(resourceGroupName) }}"
    purge_rules: "no"
    rules: "{{ vm_rules }}"
    subscription_id: "{{ azureSubId }}"
    client_id: "{{ az_client_id }}"
    tenant: "{{ az_tenant_id}}"
    secret: "{{ az_secret }}"
  when: (tertiary is not defined or tertiary == "no") and ( networking.subnet is defined )
  tags:
    - createvm
    - updatevmnsgrules
    - createrg
    - doormanrg

- name: Add APPGW NSG rules
  azure_rm_securitygroup:
    name: "{{ appgw.nsg.name }}"
    resource_group: "{{ appgw.nsg.rg | default(resourceGroupName) }}"
    purge_rules: "no"
    rules: "{{ appgw_rules }}"
    subscription_id: "{{ azureSubId }}"
    client_id: "{{ az_client_id }}"
    tenant: "{{ az_tenant_id}}"
    secret: "{{ az_secret }}"
  when: (tertiary is not defined or tertiary == "no") and ( networking.subnet is defined )
  tags:
    - awxaccess
    - createappgw
    - updateappgwnsgrules
    - createrg
    - manageonensg

- name: Add AKS NSG rules
  azure_rm_securitygroup:
    name: "{{ aks.nsg.name }}"
    resource_group: "{{ aks.nsg.rg | default(resourceGroupName) }}"
    purge_rules: "no"
    rules: "{{ aks_rules }}"
    subscription_id: "{{ azureSubId }}"
    client_id: "{{ az_client_id }}"
    tenant: "{{ az_tenant_id}}"
    secret: "{{ az_secret }}"
  when: (tertiary is not defined or tertiary == "no") and ( networking.subnet is defined )
  tags:
    - createaks
    - updateaksnsgrules
    - createrg

- name: Add APIM NSG rules
  azure_rm_securitygroup:
    name: "{{ apim.nsg.name }}"
    resource_group: "{{ apim.nsg.rg | default(resourceGroupName) }}"
    purge_rules: "no"
    rules: "{{ apim_rules }}"
    subscription_id: "{{ azureSubId }}"
    client_id: "{{ az_client_id }}"
    tenant: "{{ az_tenant_id}}"
    secret: "{{ az_secret }}"
  when: (tertiary is not defined or tertiary == "no") and ( networking.subnet is defined )
  tags:
    - createapim
    - updateapimnsgrules
    - createrg

- name: Change SSH rule
  azure_rm_securitygroup:
    name: "{{ vm.nsg.name }}"
    resource_group: "{{ vm.nsg.rg | default(resourceGroupName) }}"
    purge_rules: "no"
    rules: "{{ single_rule }}"
    subscription_id: "{{ azureSubId }}"
    client_id: "{{ az_client_id }}"
    tenant: "{{ az_tenant_id}}"
    secret: "{{ az_secret }}"
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - manageonensg

- name: Change HTTP rule
  azure_rm_securitygroup:
    name: "{{ vm.nsg.name }}"
    resource_group: "{{ vm.nsg.rg | default(resourceGroupName) }}"
    purge_rules: "no"
    rules: "{{ single_http_rule }}"
    subscription_id: "{{ azureSubId }}"
    client_id: "{{ az_client_id }}"
    tenant: "{{ az_tenant_id}}"
    secret: "{{ az_secret }}"
  run_once: "{{ run_nsg_once | default(false) }}"
  tags:
    - manageonensg

- name: Set SQL Server firewall rule
  azure_rm_sqlfirewallrule:
    name: "AllowUser_{{ item.name | replace (' ', '_') }}"
    resource_group: "{{ sqlNSgResourceGroupFact }}"
    server_name: "{{ sqlServerName }}"
    start_ip_address: "{{ item.ip }}"
    end_ip_address: "{{ item.ip }}"
    subscription_id: "{{ azureSubId }}"
    client_id: "{{ az_client_id }}"
    tenant: "{{ az_tenant_id}}"
    secret: "{{ az_secret }}"
  with_items: "{{ dbUsersIP }}"
  tags:
    - managesqlfirewall

# Delete security groups
- name: Remove VM NSG rules
  azure_rm_securitygroup:
    name: "{{ vm.nsg.name }}"
    resource_group: "{{ vm.nsg.rg | default(resourceGroupName) }}"
    state: absent
  tags:
    - removevmnsg
    - deleterg

- name: Remove APPGW NSG rules
  azure_rm_securitygroup:
    name: "{{ appgw.nsg.name }}"
    resource_group: "{{ appgw.nsg.rg | default(resourceGroupName) }}"
    state: absent
  when: tertiary is not defined or tertiary == "no"
  tags:
    - removeappgwnsg
    - deleterg

- name: Remove AKS NSG rules
  azure_rm_securitygroup:
    name: "{{ aks.nsg.name }}"
    resource_group: "{{ aks.nsg.rg | default(resourceGroupName) }}"
    state: absent
  when: tertiary is not defined or tertiary == "no"
  tags:
    - removeaksnsg
    - deleterg

- name: Remove APIM NSG rules
  azure_rm_securitygroup:
    name: "{{ apim.nsg.name }}"
    resource_group: "{{ apim.nsg.rg | default(resourceGroupName) }}"
    state: absent
  when: tertiary is not defined or tertiary == "no"
  tags:
    - removeapimnsg
    - deleterg