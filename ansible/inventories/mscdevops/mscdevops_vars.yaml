# author: Seweryn Malinowski

###########################Ansible vault variables mapping##########################
# azure_cont_reg_pass - docker registry password
# az_client_id - azure service principal client id
# az_secret - azure service principal secret
# az_tenant_id - azure tenant id
# az_aks_client_id - aks service principal client id
# az_aks_secret - aks service principal secret

###########################Env variables#########################################
ansible_python_interpreter: /usr/bin/python3

###########################Azure variables#########################################
azureSubId: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    62366466323966633832646361383637353466323134636366306161373034373538356131366637
    3634393531333932643235313964626133666264396135660a663632343430666136653834383336
    33303061396437646135643637303637303137313161373038353036313436323139636662353932
    6663376335656365340a393666663039386165393134383932656137306130383663373430316462
    37303765346264613130336335303133323964373538616562643463383235623037363038373366
    3565663233626462353334353533326231656336313863366232

location: "westeurope"
devops:
  rg:
    name: "security"
    tags: "{'env':'devops'}"
  nsg:
    name: "devops"

mscdevops:
  tags: "{'env':'mscdevops'}"

environmentPrefix: "{{ env }}"

#dbUrl: "jdbc:sqlserver://{{ dbSrv }}:1433;database={{ dbName }};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;"\
dbUrl: "mongodb+srv://dbUser:{{ dbUser }}@{{ dbSrv }}.azure.mongodb.net/{{ dbName }}?retryWrites=true&connectTimeoutMS=600000"

aks:
  name: "{{ environmentPrefix }}-aks"
  version: 1.15.7
  vnet: "{{ vnet.name }}"
  rg: "{{ environmentPrefix }}-aks-rg"
  subnet:
    name: "{{ environmentPrefix }}-aks-sub"
  nsg:
    name: "{{ environmentPrefix }}-aks-nsg"
    rg: "{{  nsg.rg | default(resourceGroupName) }}"
  client:
    id: "{{ az_aks_client_id }}"
    secret: "{{ az_aks_secret }}"
  node:
    count: 2
    size: "Standard_D8s_v3"
  tags: "{'env':'ca1'}"

vnet:
  name: "{{ environmentPrefix }}-vnet"
  rg: "{{ environmentPrefix }}-network-rg"
  networking:
    dns: "8.8.8.8"
    vnet_cidr: "10.110.0.0/16"
    subnet:
      aks: "10.110.10.0/24"

nsg:
  name: "{{ environmentPrefix }}-security-nsg"
  rg: "{{ environmentPrefix }}-security-rg"

lb:
  name: "{{ environmentPrefix }}-lb"
  rg: "vnet.rg"

pip:
  name: "{{ environmentPrefix }}-pip"
  rg: "vnet.rg"

###########################Docker constant variables################################
dockerRegistry:  "mcsdevopsentarch.azurecr.io"
dockerImage: "{{ dockerRegistry }}/mscdevopsca1/{{dockerImageName}}"
dockerTag: "{{ dockerImageTagVar }}"
dockerUser: mcsdevopsentarch

acrSecName: myseckey